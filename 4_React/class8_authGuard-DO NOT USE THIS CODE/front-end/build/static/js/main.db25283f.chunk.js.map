{"version":3,"sources":["core/index.js","context/globalContext.js","components/login/login.jsx","components/signup/signup.jsx","components/forgetPassword/forgetPassword.jsx","components/dashboard/dashboard.jsx","components/profile/profile.jsx","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","GlobalStateContext","React","createContext","GlobalStateUpdateContext","useGlobalState","useContext","useGlobalStateUpdate","GlobalStateProvider","children","useEffect","axios","method","url","withCredentials","then","response","console","log","status","setData","prev","loginStatus","catch","error","useState","user","darkTheme","token","data","Provider","value","Login","globalState","setGlobalState","onSubmit","e","preventDefault","document","getElementById","type","id","placeholder","to","onClick","JSON","stringify","Signup","history","useHistory","push","ForgetPassword","Dashboard","Profile","App","themeStyles","backgroundColor","color","padding","navStyles","display","border","marginLeft","style","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0OAAaA,EAAU,wB,gCCKjBC,EAAqBC,IAAMC,gBAC3BC,EAA2BF,IAAMC,gBAE1BE,EAAiB,kBAAMC,qBAAWL,IAClCM,EAAuB,kBAAMD,qBAAWF,IAE9C,SAASI,EAAT,GAA4C,IAAbC,EAAY,EAAZA,SAElCC,qBAAU,WAuBN,OArBAC,IAAM,CACFC,OAAQ,MACRC,IAAKb,EAAU,WACfc,iBAAiB,IAEhBC,MAAK,SAAUC,GAEZC,QAAQC,IAAI,aAAcF,EAASG,QACX,MAApBH,EAASG,QACTC,GAAQ,SAAAC,GAAI,kCAAUA,GAAV,IAAgBC,aAAa,UAGhDC,OAAM,SAAUC,GAEbP,QAAQC,IAAI,eAAgBM,GACxBA,GAASA,EAAMR,UAAYQ,EAAMR,SAASG,SAC1CF,QAAQC,IAAI,yBAA0BM,EAAMR,SAASG,QACrDC,GAAQ,SAAAC,GAAI,kCAAUA,GAAV,IAAgBC,aAAa,WAI9C,WACHL,QAAQC,IAAI,cAEjB,IA5B2C,MA+BtBO,mBAAS,CAC7BC,KAAM,KACNC,WAAW,EACXL,aAAa,EACbM,MAAO,OAnCmC,mBA+BvCC,EA/BuC,KA+BjCT,EA/BiC,KAsC9C,OACI,cAACnB,EAAmB6B,SAApB,CAA6BC,MAAOF,EAApC,SACI,cAACzB,EAAyB0B,SAA1B,CAAmCC,MAAOX,EAA1C,SACKX,MCgBFuB,MA9Df,WAEI,IAAMC,EAAc5B,IACd6B,EAAiB3B,IA8BvB,OACI,gCACI,wCACA,uBAAM4B,SA9Bd,SAAqBC,GACjBA,EAAEC,iBACF1B,IAAM,CACFE,IAAKb,EAAU,SACfY,OAAQ,OACRiB,KAAM,CACF,MAASS,SAASC,eAAe,SAASR,MAC1C,SAAYO,SAASC,eAAe,YAAYR,OAEpDjB,iBAAiB,IAClBC,MAAK,SAAUC,GACdC,QAAQC,IAAI,aAAcF,EAASa,MAEnCK,GAAe,SAAAb,GACX,OAAO,2BAAKA,GAAZ,IAAkBC,aAAa,UAGpCC,OAAM,SAAUC,GAEfP,QAAQC,IAAI,eAAgBM,GACxBA,GAASA,EAAMR,UAAYQ,EAAMR,SAASG,QAC1CF,QAAQC,IAAI,yBAA0BM,EAAMR,SAASG,YASzD,oBAEW,uBAAOqB,KAAK,QAAQC,GAAG,QAAQC,YAAY,mBAClD,uBAHJ,aAIc,uBAAOF,KAAK,WAAWC,GAAG,WAAWC,YAAY,WAC3D,uBAEA,+CAEJ,uBACA,cAAC,IAAD,CAAMC,GAAG,mBAAT,6BACA,uBACA,uBAEA,uBACA,uBACA,uBACA,uBACA,uBACA,wBAAQC,QAAS,WACbV,GAAe,SAAAb,GAAI,kCAAUA,GAAV,IAAgBM,WAAYN,EAAKM,gBADxD,oBAICkB,KAAKC,UAAUb,GAzBpB,eCIOc,MAtCf,WAEI,IAAMd,EAAc5B,IACd6B,EAAiB3B,IAGnByC,EAAUC,cAKd,OACI,gCACI,wCAEA,uBAHJ,WAGkB,uBAAOT,KAAK,SAC1B,uBAJJ,YAImB,uBAAOA,KAAK,SAC3B,uBALJ,eAKsB,uBAAOA,KAAK,SAC9B,uBANJ,kBAMyB,uBAAOA,KAAK,SACjC,uBAPJ,IAOW,4CAEP,uBAAM,wBAAQI,QAdtB,WACII,EAAQE,KAAK,MAaH,mEAGN,uBACA,uBACA,uBACA,uBACA,uBACA,wBAAQN,QAAS,WACbV,GAAe,SAAAb,GAAI,kCAAUA,GAAV,IAAgBM,WAAYN,EAAKM,gBADxD,oBAICkB,KAAKC,UAAUb,OCzBbkB,MAbf,WAEI,OACI,gCACI,kDADJ,UAGW,uBAAOX,KAAK,UACnB,uBAEA,gDCmBGY,EA1BG,WAEd,IAAMnB,EAAc5B,IACd6B,EAAiB3B,IAIvB,OAAQ,gCAEJ,2CAEA,0DAGA,uBACA,uBACA,uBACA,uBACA,uBACA,wBAAQqC,QAAS,WACbV,GAAe,SAAAb,GAAI,kCAAUA,GAAV,IAAgBM,WAAYN,EAAKM,gBADxD,oBAICkB,KAAKC,UAAUb,OCIToB,EA3BC,WAEZ,IAAMpB,EAAc5B,IACd6B,EAAiB3B,IAIvB,OAAQ,gCAEJ,yCAEA,0DAEA,uBACA,uBACA,uBACA,uBACA,uBACA,wBAAQqC,QAAS,WACbV,GAAe,SAAAb,GAAI,kCAAUA,GAAV,IAAgBM,WAAYN,EAAKM,gBADxD,oBAICkB,KAAKC,UAAUb,OCwGTqB,MA7Gf,WAEE,IAAMrB,EAAc5B,IACd6B,EAAiB3B,IAkBjBgD,EAAc,CAClBC,gBAAiBvB,EAAYN,UAAY,OAAS,OAClD8B,MAAOxB,EAAYN,UAAY,OAAS,OACxC+B,QAAS,QAELC,EAAY,CAChBC,QAAS,SACTC,OAAQ5B,EAAYN,UAAY,kBAAoB,kBACpD+B,QAAS,MACTI,WAAY,OAGd,OACE,qBAAKC,MAAOR,EAAZ,SAEE,eAAC,IAAD,WAEE,+BACgC,IAA5BtB,EAAYX,YACZ,+BACE,qBAAIyC,MAAOJ,EAAX,eAAwB,cAAC,IAAD,CAAMhB,GAAG,IAAT,uBAAxB,WACA,qBAAIoB,MAAOJ,EAAX,eAAwB,cAAC,IAAD,CAAMhB,GAAG,WAAT,qBAAxB,WAFF,OAGQ,wBAAQC,QAtC1B,WACEjC,IAAM,CACJE,IAAKb,EAAU,UACfY,OAAQ,OACRE,iBAAiB,IAEhBC,MAAK,SAAUC,GACdC,QAAQC,IAAI,aAAcF,EAASa,MACnCK,GAAe,SAAAb,GACb,OAAO,2BAAKA,GAAZ,IAAkBC,aAAa,WA6BrB,uBAGR,+BACE,qBAAIyC,MAAOJ,EAAX,eAAwB,cAAC,IAAD,CAAMhB,GAAG,IAAT,mBAAxB,WACA,qBAAIoB,MAAOJ,EAAX,eAAwB,cAAC,IAAD,CAAMhB,GAAG,UAAT,oBAAxB,iBAWwB,IAA5BV,EAAYX,YACZ,qCACE,cAAC,IAAD,CAAO0C,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUtB,GAAG,WAGf,MAK0B,IAA5BV,EAAYX,YAEZ,qCACE,cAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUtB,GAAG,WAGf,WCxGGuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpE,EAAD,UACE,cAAC,EAAD,QAGJ8B,SAASC,eAAe,SAM1B2B,M","file":"static/js/main.db25283f.chunk.js","sourcesContent":["export const baseUrl = \"http://localhost:5000\"","\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { baseUrl } from \"../core\"\n\nconst GlobalStateContext = React.createContext()\nconst GlobalStateUpdateContext = React.createContext()\n\nexport const useGlobalState = () => useContext(GlobalStateContext)\nexport const useGlobalStateUpdate = () => useContext(GlobalStateUpdateContext)\n\nexport function GlobalStateProvider({ children }) {\n\n    useEffect(() => {\n\n        axios({\n            method: \"get\",\n            url: baseUrl + '/profile',\n            withCredentials: true\n        })\n            .then(function (response) {\n                // handle success\n                console.log(\"response: \", response.status);\n                if (response.status === 200) {\n                    setData(prev => ({ ...prev, loginStatus: true }))\n                }\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(\"error: ==== \", error);\n                if (error && error.response && error.response.status) {\n                    console.log(\"error ==============> \", error.response.status);\n                    setData(prev => ({ ...prev, loginStatus: false }))\n                }\n            })\n\n        return () => {\n            console.log(\"cleanup\")\n        }\n    }, [])\n\n\n    const [data, setData] = useState({\n        user: null,\n        darkTheme: false,\n        loginStatus: false,\n        token: null\n    })\n\n    return (\n        <GlobalStateContext.Provider value={data}>\n            <GlobalStateUpdateContext.Provider value={setData}>\n                {children}\n            </GlobalStateUpdateContext.Provider>\n        </GlobalStateContext.Provider>\n    )\n} ","import { useGlobalState, useGlobalStateUpdate } from \"./../../context/globalContext\"\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl } from \"./../../core\"\n\n\nfunction Login() {\n\n    const globalState = useGlobalState()\n    const setGlobalState = useGlobalStateUpdate()\n\n\n    function handleLogin(e) {\n        e.preventDefault()\n        axios({\n            url: baseUrl + \"/login\",\n            method: \"POST\",\n            data: {\n                \"email\": document.getElementById(\"email\").value,\n                \"password\": document.getElementById(\"password\").value\n            },\n            withCredentials: true\n        }).then(function (response) {\n            console.log(\"response: \", response.data);\n\n            setGlobalState(prev => {\n                return { ...prev, loginStatus: true }\n            })\n\n        }).catch(function (error) {\n            // handle error\n            console.log(\"error: ==== \", error);\n            if (error && error.response && error.response.status) {\n                console.log(\"error ==============> \", error.response.status);\n            }\n\n        })\n    }\n\n    return (\n        <div>\n            <h1>Login:</h1>\n            <form onSubmit={handleLogin}>\n\n                Email: <input type=\"email\" id=\"email\" placeholder=\"john@gmail.com\" />\n                <br />\n                Password: <input type=\"password\" id=\"password\" placeholder=\"123456\" />\n                <br />\n\n                <button>Log in</button>\n            </form>\n            <br />\n            <Link to=\"/forget_password\">forget password</Link>\n            <br />\n            <br />\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <button onClick={() => {\n                setGlobalState(prev => ({ ...prev, darkTheme: !prev.darkTheme }))\n            }}\n            >toggle</button>\n            {JSON.stringify(globalState)}        </div>\n    )\n}\nexport default Login;\n","import {\n    useHistory\n} from \"react-router-dom\";\n\nimport { useGlobalState, useGlobalStateUpdate } from \"./../../context/globalContext\"\n\nfunction Signup() {\n\n    const globalState = useGlobalState()\n    const setGlobalState = useGlobalStateUpdate()\n\n\n    var history = useHistory();\n    function handleClick() {\n        history.push(\"/\");\n    }\n\n    return (\n        <div>\n            <h1>Signup</h1>\n\n            <br /> name:  <input type=\"text\" />\n            <br /> email:  <input type=\"text\" />\n            <br /> password:  <input type=\"text\" />\n            <br /> re-password:  <input type=\"text\" />\n            <br /> <button>Submit</button>\n\n            <br /><button onClick={handleClick}> I already have an account take me back to login page</button>\n\n\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <button onClick={() => {\n                setGlobalState(prev => ({ ...prev, darkTheme: !prev.darkTheme }))\n            }}\n            >toggle</button>\n            {JSON.stringify(globalState)}\n\n        </div>\n    )\n}\nexport default Signup;\n","\nfunction ForgetPassword() {   \n\n    return (\n        <div>\n            <h1>Forget Password:</h1>\n\n            Email: <input type=\"email\" />\n            <br />\n\n            <button>Submit</button>\n        </div>\n    )\n}\nexport default ForgetPassword;\n","\nimport { useGlobalState, useGlobalStateUpdate } from \"./../../context/globalContext\"\n\nconst Dashboard = () => {\n\n    const globalState = useGlobalState()\n    const setGlobalState = useGlobalStateUpdate()\n\n\n\n    return (<div>\n\n        <h1>Dashboard</h1>\n\n        <p>this is a protected route</p>\n\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <button onClick={() => {\n            setGlobalState(prev => ({ ...prev, darkTheme: !prev.darkTheme }))\n        }}\n        >toggle</button>\n        {JSON.stringify(globalState)}\n    </div>)\n}\nexport default Dashboard;\n","\nimport { useGlobalState, useGlobalStateUpdate } from \"./../../context/globalContext\"\n\nconst Profile = () => {\n\n    const globalState = useGlobalState()\n    const setGlobalState = useGlobalStateUpdate()\n\n\n\n    return (<div>\n\n        <h1>Profile</h1>\n\n        <p>this is a protected route</p>\n\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <button onClick={() => {\n            setGlobalState(prev => ({ ...prev, darkTheme: !prev.darkTheme }))\n        }}\n        >toggle</button>\n        {JSON.stringify(globalState)}\n\n\n    </div>)\n}\nexport default Profile;\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport React, { useContext } from \"react\";\nimport {baseUrl} from \"./core\"\n\nimport Login from \"./components/login/login\"\nimport Signup from \"./components/signup/signup\"\nimport ForgetPassword from \"./components/forgetPassword/forgetPassword\"\n\nimport Dashboard from \"./components/dashboard/dashboard\"\nimport Profile from \"./components/profile/profile\"\nimport axios from \"axios\";\n\nimport { useGlobalState, useGlobalStateUpdate } from \"./context/globalContext\"\n\nfunction App() {\n\n  const globalState = useGlobalState()\n  const setGlobalState = useGlobalStateUpdate()\n\n  function handleLogout() {\n    axios({\n      url: baseUrl + \"/logout\",\n      method: \"POST\",\n      withCredentials: true\n    })\n      .then(function (response) {\n        console.log(\"response: \", response.data);\n        setGlobalState(prev => {\n          return { ...prev, loginStatus: false }\n        })\n      })\n\n  }\n\n\n  const themeStyles = {\n    backgroundColor: globalState.darkTheme ? \"#333\" : \"#ccc\",\n    color: globalState.darkTheme ? \"#ccc\" : \"#333\",\n    padding: \"2rem\",\n  }\n  const navStyles = {\n    display: \"inline\",\n    border: globalState.darkTheme ? \"1px solid white\" : \"1px solid black\",\n    padding: \"5px\",\n    marginLeft: \"5px\"\n  }\n\n  return (\n    <div style={themeStyles}>\n\n      <Router>\n\n        <nav>\n          {(globalState.loginStatus === true) ?\n            <ul>\n              <li style={navStyles}>  <Link to=\"/\">Dashboard</Link>     </li>\n              <li style={navStyles}>  <Link to=\"/profile\">Profile</Link>     </li>\n              &nbsp;<button onClick={handleLogout}>Logout</button>\n\n            </ul> :\n            <ul>\n              <li style={navStyles}>  <Link to=\"/\">login</Link>     </li>\n              <li style={navStyles}>  <Link to=\"/signup\">Signup</Link>     </li>\n            </ul>}\n\n          {/* <button style={navStyles} onClick={() => setGlobalState(prev => ({ ...prev, darkTheme: !prev.darkTheme }))} >toggle</button>\n          {\"===>\" + JSON.stringify(globalState)} */}\n\n        </nav>\n\n\n\n        {/* public routes */}\n        {(globalState.loginStatus === false) ?\n          <>\n            <Route exact={true} path=\"/\">\n              <Login />\n            </Route>\n\n            <Route path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route path=\"/forget_password\">\n              <ForgetPassword />\n            </Route>\n\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </>\n          : null}\n\n\n        {/* private routes */}\n\n        {(globalState.loginStatus === true) ?\n\n          <>\n            <Route exact path=\"/\">\n              <Dashboard />\n            </Route>\n\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </>\n          : null}\n\n\n\n\n\n\n\n      </Router >\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GlobalStateProvider } from \"./context/globalContext\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}